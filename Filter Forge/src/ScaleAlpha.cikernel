/*

*/

/*
kernel vec4 scaleAlpha(sampler src,sampler dst,float opacity)
{
    vec4 srcClr = unpremultiply(sample(src, samplerCoord(src)));
    vec4 dstClr = unpremultiply(sample(dst, samplerCoord(dst)));
    float dstA = dstClr.a*opacity;

    float alpha_out = srcClr.a + dstA*(1.-srcClr.a);

    float invAlpha_out = alpha_out < .01 ? 0.0 : 1./alpha_out;


//    vec4 outClr = (srcClr*srcClr.a+dstClr*dstClr.a*(1.-srcClr.a))*invAlpha_out;
     vec4 outClr = (srcClr*srcClr.a+dstClr*dstA*(1.-srcClr.a))*invAlpha_out;
   

    outClr.a = alpha_out;
//    vec4 out = srcClr;

    return premultiply(outClr);

}
*/

kernel vec4 scaleAlpha(sampler inputImage, float opacity)
{
    vec4 inputImageClr = unpremultiply(sample(inputImage, samplerCoord(inputImage)));
    inputImageClr.a *= opacity;
    return premultiply(inputImageClr);

}