/*

*/


kernel vec4 maskToAlphaKernel(sampler image,float alphaScale,__color mapColor)
{
  vec4 inColor = unpremultiply(sample(image, samplerCoord(image)));
  float alpha = floor((inColor.r+inColor.b+inColor.g)/3.+.9)*alphaScale;

  vec4 outColor;


//  mapColor.r = 1.0;
//  mapColor.g = 0.0;
//  mapColor.b = 0.0;
//  mapColor.a = 1.0;


//  outColor.r = outputValue;
//  outColor.g = outputValue;
//  outColor.b = outputValue;
//  outColor.a = alpha;
//  outColor.r = 1.0;
//  outColor.g = 0.0;
//  outColor.b = 0.0;
//  outColor.a = alpha;

    outColor = mapColor;
    outColor.a = alpha;

//    outColor = inColor;
//    outColor.a = alphaScale;


  return premultiply(outColor);
}
